so_long
	perror 함수 - void perror(const char* str);
		에러 번호를 설명하는 에러 문자열을 출력하는 함수

	strerror 함수 - char * strerror ( int errno ); 
		에러 번호를 설명하는 에러 문자열을 반환하는 함수
		errno : 에러 번호

		== Error Message List ==
		<0>:No error
		<1>:Operation not permitted
		<2>:No such file or directory
		<3>:No such process
		<4>:Interrupted function call
		<5>:Input/output error
		<6>:No such device or address
		<7>:Arg list too long
		<8>:Exec format error
		<9>:Bad file descriptor
		<10>:No child processes
		<11>:Resource temporarily unavailable
		<12>:Not enough space
		<13>:Permission denied
		<14>:Bad address
		<15>:Unknown error
		<16>:Resource device
		<17>:File exists
		<18>:Improper link
		<19>:No such device
		<20>:Not a directory
		<21>:Is a directory
		<22>:Invalid argument
		<23>:Too many open files in system
		<24>:Too many open files
		<25>:Inappropriate I/O control operation
		<26>:Unknown error
		<27>:File too large
		<28>:No space left on device
		<29>:Invalid seek
		<30>:Read-only file system
		<31>:Too many links
		<32>:Broken pipe
		<33>:Domain error
		<34>:Result too large
		<35>:Unknown error
		<36>:Resource deadlock avoided
		<37>:Unknown error
		<38>:Filename too long
		<39>:No locks available
		<40>:Function not implemented
		<41>:Directory not empty
		<42>:Illegal byte sequence
		<43>:Unknown error
		<44>:Unknown error

	ber
		German Bericht Report File 파일은 원래 Unknown Developer가 
		Unknown Software 소프트웨어 응용 프로그램을 위해 개발했습니다

	xpm
		XPM는 X11 Pixmap Graphic입니다.
		X Windows 시스템에서 사용하는 비트 맵 이미지, 네트워크로 연결된 클라이언트 서버 컴퓨터를 
		실행하는 데 사용되는 (GUI); 단색, 회색조 및 컬러 픽스맵 데이터를 지원합니다. 

		pixmap을 C 프로그래밍 언어의 정적 문자 배열로 저장합니다.
		XPM 파일은 .XBM 파일을 확장하도록 설계되었습니다. 

		두 이미지 유형 모두 C 프로그램 소스 코드에 포함될 수 있으며 C 컴파일러를 사용하여 
		애플리케이션으로 직접 컴파일 될 수 있습니다.
	
	png
		'Portable Network Graphics'의 약자로서 그림 파일 형식 가운데 하나이다.
		PNG는 무손실 압축 포맷을 채택하였으며, 256색에 한정된 GIF의 한계를 극복하여 
		32비트 트루컬러를 표현할 수 있게 되었다. 
		다만 네이티브 PNG는 GIF에서 제공하는 애니메이션 기능은 제공하지 못한다.
		
		더불어 GIF가 제공하는 '투명 배경'은 이 형식에서도 지원된다. 
		엄밀히는 GIF는 특정색 한 가지만 투명으로 지정하는 방법이고, 
		PNG는 알파채널을 포함해서 완벽하게 불투명도를 지정할 수 있다.

	MinilibX, openGL
		MinilibX
			miniLibX는 쬐끄만 그래픽 라이브러리로서, cocoa나 x-window에 대한 지식 없이도 
			스크린에 기본적인 무언가를 렌더링할 수 있게 도와준다. 
			해당 라이브러리는 다음을 제공한다: window(창) creation, 드로잉(drawing) 툴, 
			이상하고 좀 부족한 이미지 기능과 이벤트 관리 시스템.

		X-window
			X-window는 unix를 위한 네트워크 지향적인(network-oriented) 그래픽 시스템이다. 
			원격 데스크톱에 연결하는 데에 쓰이는 것을 하나의 예로 생각할 수 있겠다. 
			TeamViewer가 이것을 사용하는 가장 일반적인 프로그램이다.

		void *mlx_init ();
			기능
				- mlx 모든 함수 사용 이전에 사용해야 하는 함수
				- 소프트웨어와 디스플레이를 연결한다.
				- 연결이 되면, MiniLibX를 사용해 디스플레이와 메시지를 주고 받을 수 있다. 예를 들어 "이 창에 노란색 픽셀을 그리고 싶다." 또는 "사용자가 키를 쳤습니까?" 와 같은 기능이다.
			반환값
				- 연결 성공: 연결 식별자인 non-null 포인터
				- 연결 실패: NULL
		
		void *mlx_new_window (void *mlx_ptr, int size_x, int size_y, char *title);
			매개변수
				- mlx_ptr: 연결 식별자
				- size_x, size_y: 새 창의 사이즈
				- title: 창의 타이틀바에 보일 문자열
			반환값
				- 이것 또한 다른 함수에서 사용할 수 있는 연결 확인용의 non-null 포인터를 반환한다.
				- MiniLibX는 임의의 수의 개별 창을 처리할 수 있다.
				- 생성 성공: void *win_ptr: 창 사용 식별자인 non-null pointer
				- 생성 실패: NULL

		int mlx_destroy_window (void *mlx_ptr, void *win_ptr);
			매개변수
				- mlx_ptr: 연결 식별자
				- win_ptr: 윈도우 창 식별자

		int mlx_put_image_to_window(void *mlx_ptr, void *win_ptr, void *img_ptr, int x, int y);
			매개 변수
				- img_ptr: 사용할 이미지
				- x, y: 이미지가 위치할 창 내의 x, y좌표

		void *mlx_xpm_file_to_image(void *mlx_ptr, char *filename, int *width, int *height);
				- filename: 이미지 경로
				- width: 이미지 너비 (너비 값을 변수에 담음)
				- height: 이미지 높이 (높이 값을 변수에 담음)

		이벤트 기능 및 hook
			https://jeonjeunghoon.tistory.com/entry/MiniLibX-%ED%82%A4%EB%A5%BC-%EC%9E%85%EB%A0%A5-%EB%B0%9B%EC%95%84-%EB%B3%B4%EC%9E%90

메이크 파일
	라이브러리 포함하여 컴파일 할 때
		gcc *.c -I. -Lmlx -lmlx -framework OpenGL -framework Appkit
		( *-I 헤더파일 경로, -L mlx 라이브러리 경로(mlx 폴더 이름), -l 라이브러리파일 이름(앞의 lib와 뒤의 .a를 제외한 이름) )
