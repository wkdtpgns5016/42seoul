ft_printf

ft_printf 포맷 정보
    %[parameter][flags][width][.precision][length] type
    %[n][flag][출력 너비][출력되는 값(숫자)의 정확도][데이터 타입 범위] type(서식문자)

    서식 지정자
    d, i :  부호 있는 10진 정수
    u   :	부호 없는 10진 정수
    x   :	부호 없는 16진 정수(소문자)
    X   :	부호 없는 16진 정수(대문자)
    c   :	문자
    s   :	문자열
    p   :	포인터의 메모리 주소
    %   :	% 기호 출력
    
    플래그	
    -       :	왼쪽 정렬
    0       :	출력하는 폭의 남는 공간에 0으로 채움
    
    +       :	양수일 때는 + 부호, 음수일 때는 - 부호 출력
    #       :	진법에 맞게 숫자 앞에 0, 0x, 0X를 붙임
    공백     :   양수일 때는 부호를 출력하지 않고 공백으로 표시, 음수 일 때는 - 부호 출력

    폭
    숫자    :	지정한 숫자만큼 폭을 지정하여 출력, 실수는 . (점), e+까지 폭에 포함됨

    정밀도	
    .숫자   :	지정한 숫자만큼 소수점 아래 자리 출력

    printf 포맷 정보
    https://dojang.io/mod/page/view.php?id=736

    플래그 예외 조건
        문자열은 '0'으로 패딩 처리하지 않는다 ?
        데이터 타입이 정수형이고 좌측 정렬 플래그가 존재할 경우
        '0' 으로 패딩 처리하지 않는다.
        precision에 음수가 할당되면 무시(없는 것으로 간주)
        '0' 플래그가 존재하고 정밀도 너비가 양수이면 '0' 플래그 무시
        https://velog.io/@bahn/ftprintf

가변인자
    함수를 사용할때 마다 인자의 개수가 바뀌는 것을 가변인자라고 함
    매개변수를 사용할 때, 고정인자 옆에 "..."을 붙임
    va_list - 가변 인자가 들어오게 되면 저장하게 되는 list형태의 자료구조
    va_start(ap, v) -  va_list를 초기화 시켜주는 함수
        ap : 가변 인자가 담긴 인스턴스 (va_list), 
        v  : 고정인수
    va_arg(ap, t) - ap 포인터가 위치한 데이터 반환하는 함수
    va_end(ap) - va_list 타입을 null로 초기화 시키는 함수
    va_copy(dst, ap) - va_list를 복사하는 함수

필요한 기능
    포맷(고정인자)를 구분, 분리하는 기능 (각 서식지정자와 플래그, 폭, 정밀도 등을 조합한 것을 구분할 필요가 있음)
    가변인자와 고정인자가 일치하는지 검사하는 기능
    출력 기능
    ...

플래그
    기본 플래그와 보너스 플래그는 중복이 가능, 하지만 기본, 보너스끼리의 중복은 작동 X
    각 타입별 가능 플래그
        c : '-'
        s : '-'
        p : '-'
        d : '-', '0', ' ', '+' 
        i : '-', '0', ' ', '+'
        u : '-', '0'
        x : '-', '0', '#'
        X : '-', '0', '#'
        % : 
